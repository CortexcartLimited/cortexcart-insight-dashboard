import { getServerSession } from 'next-auth/next';
import { authOptions } from '@/app/api/auth/[...nextauth]/route';
import db from '../../../../../../lib/db';
import { NextResponse } from 'next/server';

/**
 * This endpoint fetches the connection status for various social platforms
 * for the logged-in user. It returns a boolean map indicating whether
 * credentials have been stored for each platform. It does NOT return any
 * sensitive information.
 */
export async function GET() {
    const session = await getServerSession(authOptions);
    if (!session?.user?.email) {
        return NextResponse.json({ message: 'Not authenticated' }, { status: 401 });
    }

    const userEmail = session.user.email;
    const supportedPlatforms = ['x', 'facebook', 'linkedin']; // Define platforms you support

    try {
        const [connections] = await db.query(
            'SELECT platform FROM social_connections WHERE user_email = ?',
            [userEmail]
        );

        const status = {};
        const connectedPlatforms = new Set(connections.map(c => c.platform.toLowerCase()));

        supportedPlatforms.forEach(platform => {
            status[platform] = connectedPlatforms.has(platform);
        });

        return NextResponse.json(status, { status: 200 });

    } catch (error) {
        console.error('Error fetching social connection statuses:', error);
        return NextResponse.json({ message: 'Internal Server Error' }, { status: 500 });
    }
}
